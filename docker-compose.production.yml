volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}
  
  production_redis_data: {}
  


services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: kquires_production_django
    volumes:
      - /home/techanzy/work/production/media:/app/kquires/media
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: kquires_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: kquires_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:5555:5555'

  redis:
    image: docker.io/redis:6
    
    volumes:
      - production_redis_data:/data
    

  celeryworker:
    <<: *django
    image: kquires_production_celeryworker
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: kquires_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    image: kquires_production_flower
    command: /start-flower

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: kquires_production_nginx
    depends_on:
      - django
    volumes:
      - /home/techanzy/work/production/media:/usr/share/nginx/media:ro
